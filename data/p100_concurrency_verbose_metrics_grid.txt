number of tries: 
0    1277
5    1001
4     426
1     370
3     273
2     253
Name: attempts_of_5, dtype: int64
classes count: 
0    2173
1    1427
Name: classification, dtype: int64
all variables : ['k1_blocks_per_grid', 'k2_blocks_per_grid', 'k1_threads_per_block', 'k2_threads_per_block', 'k1_registers', 'k2_registers', 'k1_shared_mem_B', 'k2_shared_mem_B']


testing for Recursive Feature Selection ================================================================
STARTING TRAINING
considering variables: ['k1_threads_per_block', 'k2_threads_per_block', 'k1_registers', 'k2_registers']
===========================step 1============================


Multi-layer Perceptron results:
accuracy_score: 0.725761772853
precision_score :0.69298245614
recall_score: 0.552447552448
kappa_score: 0.406062519735




K Nearest neighbor results:
accuracy_score: 0.700831024931
precision_score :0.627737226277
recall_score: 0.601398601399
kappa_score: 0.370125044428




Logistic regression results:
accuracy_score: 0.598337950139
precision_score :0.25
recall_score: 0.00699300699301
kappa_score: -0.00812741944803




XGboost results:
accuracy_score: 0.806094182825
precision_score :0.806722689076
recall_score: 0.671328671329
kappa_score: 0.582645174077


===========================step 2============================


Multi-layer Perceptron results:
accuracy_score: 0.734072022161
precision_score :0.671532846715
recall_score: 0.643356643357
kappa_score: 0.440111150603




K Nearest neighbor results:
accuracy_score: 0.747922437673
precision_score :0.713114754098
recall_score: 0.608391608392
kappa_score: 0.459447451993




Logistic regression results:
accuracy_score: 0.598337950139
precision_score :0.25
recall_score: 0.00699300699301
kappa_score: -0.00812741944803




XGboost results:
accuracy_score: 0.795013850416
precision_score :0.8
recall_score: 0.643356643357
kappa_score: 0.556599389191


===========================step 3============================


Multi-layer Perceptron results:
accuracy_score: 0.764542936288
precision_score :0.704225352113
recall_score: 0.699300699301
kappa_score: 0.50725033321




K Nearest neighbor results:
accuracy_score: 0.739612188366
precision_score :0.673758865248
recall_score: 0.664335664336
kappa_score: 0.454419756262




Logistic regression results:
accuracy_score: 0.598337950139
precision_score :0.0
recall_score: 0.0
kappa_score: -0.0110482297723




XGboost results:
accuracy_score: 0.828254847645
precision_score :0.813953488372
recall_score: 0.734265734266
kappa_score: 0.634865737871


===========================step 4============================


Multi-layer Perceptron results:
accuracy_score: 0.747222222222
precision_score :0.724137931034
recall_score: 0.587412587413
kappa_score: 0.454581779435




K Nearest neighbor results:
accuracy_score: 0.697222222222
precision_score :0.621428571429
recall_score: 0.608391608392
kappa_score: 0.365459249677




Logistic regression results:
accuracy_score: 0.605555555556
precision_score :0.666666666667
recall_score: 0.013986013986
kappa_score: 0.0112568179181




XGboost results:
accuracy_score: 0.816666666667
precision_score :0.793893129771
recall_score: 0.727272727273
kappa_score: 0.611599699219


===========================step 5============================


Multi-layer Perceptron results:
accuracy_score: 0.761111111111
precision_score :0.728
recall_score: 0.636363636364
kappa_score: 0.490202535814




K Nearest neighbor results:
accuracy_score: 0.722222222222
precision_score :0.664122137405
recall_score: 0.608391608392
kappa_score: 0.411514695786




Logistic regression results:
accuracy_score: 0.597222222222
precision_score :0.0
recall_score: 0.0
kappa_score: -0.0110792593166




XGboost results:
accuracy_score: 0.819444444444
precision_score :0.825
recall_score: 0.692307692308
kappa_score: 0.612326043738


===========================step 6============================


Multi-layer Perceptron results:
accuracy_score: 0.763888888889
precision_score :0.719696969697
recall_score: 0.664335664336
kappa_score: 0.50039184953




K Nearest neighbor results:
accuracy_score: 0.752777777778
precision_score :0.695652173913
recall_score: 0.671328671329
kappa_score: 0.480645788757


/home/pablomoreira/anaconda2/lib/python2.7/site-packages/sklearn/metrics/classification.py:1113: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples.
  'precision', 'predicted', average, warn_for)


Logistic regression results:
accuracy_score: 0.602777777778
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.791666666667
precision_score :0.793103448276
recall_score: 0.643356643357
kappa_score: 0.550479488546


===========================step 7============================


Multi-layer Perceptron results:
accuracy_score: 0.705555555556
precision_score :0.63503649635
recall_score: 0.608391608392
kappa_score: 0.380700444675




K Nearest neighbor results:
accuracy_score: 0.7
precision_score :0.62962962963
recall_score: 0.594405594406
kappa_score: 0.367496339678




Logistic regression results:
accuracy_score: 0.602777777778
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.783333333333
precision_score :0.792792792793
recall_score: 0.615384615385
kappa_score: 0.529600964921


===========================step 8============================


Multi-layer Perceptron results:
accuracy_score: 0.715877437326
precision_score :0.66393442623
recall_score: 0.570422535211
kappa_score: 0.390999201703




K Nearest neighbor results:
accuracy_score: 0.740947075209
precision_score :0.676258992806
recall_score: 0.661971830986
kappa_score: 0.456264351905




Logistic regression results:
accuracy_score: 0.598885793872
precision_score :0.0
recall_score: 0.0
kappa_score: -0.0111093725552




XGboost results:
accuracy_score: 0.841225626741
precision_score :0.829457364341
recall_score: 0.753521126761
kappa_score: 0.662621799416


===========================step 9============================


Multi-layer Perceptron results:
accuracy_score: 0.66852367688
precision_score :0.601769911504
recall_score: 0.478873239437
kappa_score: 0.281432391973




K Nearest neighbor results:
accuracy_score: 0.690807799443
precision_score :0.642201834862
recall_score: 0.492957746479
kappa_score: 0.326340168715




Logistic regression results:
accuracy_score: 0.607242339833
precision_score :1.0
recall_score: 0.00704225352113
kappa_score: 0.00850096958063




XGboost results:
accuracy_score: 0.793871866295
precision_score :0.820754716981
recall_score: 0.612676056338
kappa_score: 0.549178658702


===========================step 10============================


Multi-layer Perceptron results:
accuracy_score: 0.74651810585
precision_score :0.69465648855
recall_score: 0.640845070423
kappa_score: 0.462707432199




K Nearest neighbor results:
accuracy_score: 0.718662952646
precision_score :0.647482014388
recall_score: 0.633802816901
kappa_score: 0.409491392929




Logistic regression results:
accuracy_score: 0.610027855153
precision_score :0.75
recall_score: 0.0211267605634
kappa_score: 0.0198525683529




XGboost results:
accuracy_score: 0.793871866295
precision_score :0.753731343284
recall_score: 0.711267605634
kappa_score: 0.564691616963


MLP confusion matrix

[[177  40]
 [ 51  91]]


                accuracy    precision     recall      kappa
------------  ----------  -----------  ---------  ---------
mean           0.733307     0.683597   0.608175   0.431444
standard dev   0.0289491    0.0389105  0.0601984  0.0654975
last val       0.746518     0.694656   0.640845   0.462707
min val        0.668524     0.60177    0.478873   0.281432
max val        0.764543     0.728      0.699301   0.50725




KNN confusion matrix

[[168  49]
 [ 52  90]]


                accuracy    precision     recall      kappa
------------  ----------  -----------  ---------  ---------
mean           0.721101     0.659139   0.614538   0.41012
standard dev   0.0219329    0.0291204  0.0487844  0.0489195
last val       0.718663     0.647482   0.633803   0.409491
min val        0.690808     0.621429   0.492958   0.32634
max val        0.752778     0.713115   0.671329   0.480646




Logistic Regression confusion matrix

[[216   1]
 [139   3]]


                accuracy    precision      recall         kappa
------------  ----------  -----------  ----------  ------------
mean          0.60195        0.291667  0.0056141   -0.000988134
standard dev  0.00422508     0.357946  0.00688596   0.01041
last val      0.610028       0.75      0.0211268    0.0198526
min val       0.597222       0         0           -0.0111094
max val       0.610028       1         0.0211268    0.0198526




XGBoost

[[184  33]
 [ 41 101]]


                accuracy    precision     recall      kappa
------------  ----------  -----------  ---------  ---------
mean           0.806944     0.802941   0.680474   0.585461
standard dev   0.0177647    0.0208674  0.0481457  0.0409052
last val       0.793872     0.753731   0.711268   0.564692
min val        0.783333     0.753731   0.612676   0.529601
max val        0.841226     0.829457   0.753521   0.662622


XGBoost Feature importances: 
Feature Importance (gain):

  Score  Parameter
-------  --------------------
13.2987  k2_threads_per_block
13.0262  k1_threads_per_block
12.6616  k1_registers
12.3731  k2_registers


Feature Importance (weight):

  Score  Parameter
-------  --------------------
    183  k2_registers
    180  k1_registers
    149  k2_threads_per_block
    137  k1_threads_per_block


Feature Importance (cover):

  Score  Parameter
-------  --------------------
353.03   k2_registers
324.175  k1_registers
273.133  k1_threads_per_block
258.125  k2_threads_per_block


testing for user selected variables ===============================================================================
STARTING TRAINING
considering variables: ['k1_blocks_per_grid', 'k2_blocks_per_grid', 'k1_threads_per_block', 'k2_threads_per_block', 'k1_shared_mem_B', 'k2_shared_mem_B']
===========================step 1============================


Multi-layer Perceptron results:
accuracy_score: 0.720221606648
precision_score :0.659090909091
recall_score: 0.608391608392
kappa_score: 0.407359849162




K Nearest neighbor results:
accuracy_score: 0.778393351801
precision_score :0.729927007299
recall_score: 0.699300699301
kappa_score: 0.533425958836




Logistic regression results:
accuracy_score: 0.603878116343
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.806094182825
precision_score :0.806722689076
recall_score: 0.671328671329
kappa_score: 0.582645174077


===========================step 2============================


Multi-layer Perceptron results:
accuracy_score: 0.720221606648
precision_score :0.698113207547
recall_score: 0.517482517483
kappa_score: 0.387960989039




K Nearest neighbor results:
accuracy_score: 0.753462603878
precision_score :0.704545454545
recall_score: 0.65034965035
kappa_score: 0.477772540351




Logistic regression results:
accuracy_score: 0.603878116343
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.792243767313
precision_score :0.793103448276
recall_score: 0.643356643357
kappa_score: 0.551166221839


===========================step 3============================


Multi-layer Perceptron results:
accuracy_score: 0.781163434903
precision_score :0.758064516129
recall_score: 0.657342657343
kappa_score: 0.531884509955




K Nearest neighbor results:
accuracy_score: 0.83379501385
precision_score :0.78231292517
recall_score: 0.804195804196
kappa_score: 0.654258715362




Logistic regression results:
accuracy_score: 0.603878116343
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.806094182825
precision_score :0.782945736434
recall_score: 0.706293706294
kappa_score: 0.587751639531


===========================step 4============================


Multi-layer Perceptron results:
accuracy_score: 0.719444444444
precision_score :0.675
recall_score: 0.566433566434
kappa_score: 0.397614314115




K Nearest neighbor results:
accuracy_score: 0.786111111111
precision_score :0.753846153846
recall_score: 0.685314685315
kappa_score: 0.546317512275




Logistic regression results:
accuracy_score: 0.602777777778
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.813888888889
precision_score :0.792307692308
recall_score: 0.72027972028
kappa_score: 0.605237315876


===========================step 5============================


Multi-layer Perceptron results:
accuracy_score: 0.769444444444
precision_score :0.767857142857
recall_score: 0.601398601399
kappa_score: 0.500066925445




K Nearest neighbor results:
accuracy_score: 0.788888888889
precision_score :0.744525547445
recall_score: 0.713286713287
kappa_score: 0.555973903729




Logistic regression results:
accuracy_score: 0.602777777778
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.827777777778
precision_score :0.824
recall_score: 0.72027972028
kappa_score: 0.632471595587


===========================step 6============================


Multi-layer Perceptron results:
accuracy_score: 0.722222222222
precision_score :0.664122137405
recall_score: 0.608391608392
kappa_score: 0.411514695786




K Nearest neighbor results:
accuracy_score: 0.752777777778
precision_score :0.682432432432
recall_score: 0.706293706294
kappa_score: 0.486801640185




Logistic regression results:
accuracy_score: 0.602777777778
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.791666666667
precision_score :0.798245614035
recall_score: 0.636363636364
kappa_score: 0.549369116763


===========================step 7============================


Multi-layer Perceptron results:
accuracy_score: 0.713888888889
precision_score :0.66393442623
recall_score: 0.566433566434
kappa_score: 0.387188470946




K Nearest neighbor results:
accuracy_score: 0.775
precision_score :0.724637681159
recall_score: 0.699300699301
kappa_score: 0.527329313363




Logistic regression results:
accuracy_score: 0.602777777778
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.797222222222
precision_score :0.80701754386
recall_score: 0.643356643357
kappa_score: 0.561385940316


===========================step 8============================


Multi-layer Perceptron results:
accuracy_score: 0.727019498607
precision_score :0.671875
recall_score: 0.605633802817
kappa_score: 0.419228102612




K Nearest neighbor results:
accuracy_score: 0.782729805014
precision_score :0.753968253968
recall_score: 0.669014084507
kappa_score: 0.536605547097




Logistic regression results:
accuracy_score: 0.604456824513
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.807799442897
precision_score :0.782945736434
recall_score: 0.711267605634
kappa_score: 0.59159480982


===========================step 9============================


Multi-layer Perceptron results:
accuracy_score: 0.715877437326
precision_score :0.669491525424
recall_score: 0.556338028169
kappa_score: 0.387945443605




K Nearest neighbor results:
accuracy_score: 0.763231197772
precision_score :0.728
recall_score: 0.640845070423
kappa_score: 0.494391331003




Logistic regression results:
accuracy_score: 0.604456824513
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.785515320334
precision_score :0.835051546392
recall_score: 0.570422535211
kappa_score: 0.525466499579


===========================step 10============================


Multi-layer Perceptron results:
accuracy_score: 0.743732590529
precision_score :0.723214285714
recall_score: 0.570422535211
kappa_score: 0.44376705177




K Nearest neighbor results:
accuracy_score: 0.802228412256
precision_score :0.770992366412
recall_score: 0.711267605634
kappa_score: 0.580793710837




Logistic regression results:
accuracy_score: 0.604456824513
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.824512534819
precision_score :0.831932773109
recall_score: 0.697183098592
kappa_score: 0.622439610704


MLP confusion matrix

[[186  31]
 [ 61  81]]


                accuracy    precision    recall      kappa
------------  ----------  -----------  --------  ---------
mean           0.733324     0.695076   0.585827  0.427453
standard dev   0.0225449    0.0385803  0.036466  0.0477518
last val       0.743733     0.723214   0.570423  0.443767
min val        0.713889     0.659091   0.517483  0.387188
max val        0.781163     0.767857   0.657343  0.531885




KNN confusion matrix

[[187  30]
 [ 41 101]]


                accuracy    precision     recall     kappa
------------  ----------  -----------  ---------  --------
mean           0.781662     0.737519   0.697917   0.539367
standard dev   0.0228872    0.0285468  0.0427758  0.048998
last val       0.802228     0.770992   0.711268   0.580794
min val        0.752778     0.682432   0.640845   0.477773
max val        0.833795     0.782313   0.804196   0.654259




Logistic Regression confusion matrix

[[217   0]
 [142   0]]


                 accuracy    precision    recall    kappa
------------  -----------  -----------  --------  -------
mean          0.603612               0         0        0
standard dev  0.000716753            0         0        0
last val      0.604457               0         0        0
min val       0.602778               0         0        0
max val       0.604457               0         0        0




XGBoost

[[197  20]
 [ 43  99]]


                accuracy    precision     recall      kappa
------------  ----------  -----------  ---------  ---------
mean           0.805281     0.805427   0.672013   0.580953
standard dev   0.0132991    0.0182091  0.0460905  0.0323632
last val       0.824513     0.831933   0.697183   0.62244
min val        0.785515     0.782946   0.570423   0.525466
max val        0.827778     0.835052   0.72028    0.632472


XGBoost Feature importances: 
Feature Importance (gain):

  Score  Parameter
-------  --------------------
18.8437  k1_threads_per_block
17.6107  k2_threads_per_block
13.2216  k1_shared_mem_B
12.023   k2_blocks_per_grid
11.0348  k2_shared_mem_B
10.1594  k1_blocks_per_grid


Feature Importance (weight):

  Score  Parameter
-------  --------------------
    157  k2_blocks_per_grid
    143  k1_blocks_per_grid
    106  k2_threads_per_block
    100  k1_threads_per_block
     58  k1_shared_mem_B
     53  k2_shared_mem_B


Feature Importance (cover):

  Score  Parameter
-------  --------------------
418.905  k1_threads_per_block
378.477  k2_threads_per_block
361.406  k1_blocks_per_grid
302.912  k2_blocks_per_grid
204.725  k2_shared_mem_B
173.09   k1_shared_mem_B


testing for all variables ===============================================================================
STARTING TRAINING
considering variables: ['k1_blocks_per_grid', 'k2_blocks_per_grid', 'k1_threads_per_block', 'k2_threads_per_block', 'k1_registers', 'k2_registers', 'k1_shared_mem_B', 'k2_shared_mem_B']
===========================step 1============================


Multi-layer Perceptron results:
accuracy_score: 0.803324099723
precision_score :0.776923076923
recall_score: 0.706293706294
kappa_score: 0.582373356362




K Nearest neighbor results:
accuracy_score: 0.745152354571
precision_score :0.69465648855
recall_score: 0.636363636364
kappa_score: 0.459510480406




Logistic regression results:
accuracy_score: 0.601108033241
precision_score :0.333333333333
recall_score: 0.00699300699301
kappa_score: -0.00262305199815




XGboost results:
accuracy_score: 0.80055401662
precision_score :0.779527559055
recall_score: 0.692307692308
kappa_score: 0.574932949565


===========================step 2============================


Multi-layer Perceptron results:
accuracy_score: 0.778393351801
precision_score :0.756097560976
recall_score: 0.65034965035
kappa_score: 0.525374704181




K Nearest neighbor results:
accuracy_score: 0.739612188366
precision_score :0.724770642202
recall_score: 0.552447552448
kappa_score: 0.43252282685




Logistic regression results:
accuracy_score: 0.595567867036
precision_score :0.2
recall_score: 0.00699300699301
kappa_score: -0.0136159083042




XGboost results:
accuracy_score: 0.81163434903
precision_score :0.81512605042
recall_score: 0.678321678322
kappa_score: 0.594569597675


===========================step 3============================


Multi-layer Perceptron results:
accuracy_score: 0.806094182825
precision_score :0.751724137931
recall_score: 0.762237762238
kappa_score: 0.595667061346




K Nearest neighbor results:
accuracy_score: 0.778393351801
precision_score :0.764705882353
recall_score: 0.636363636364
kappa_score: 0.523023056088




Logistic regression results:
accuracy_score: 0.598337950139
precision_score :0.0
recall_score: 0.0
kappa_score: -0.0110482297723




XGboost results:
accuracy_score: 0.836565096953
precision_score :0.823076923077
recall_score: 0.748251748252
kappa_score: 0.652958141202


===========================step 4============================


Multi-layer Perceptron results:
accuracy_score: 0.797222222222
precision_score :0.757352941176
recall_score: 0.72027972028
kappa_score: 0.572988431041




K Nearest neighbor results:
accuracy_score: 0.791666666667
precision_score :0.774193548387
recall_score: 0.671328671329
kappa_score: 0.554866789765




Logistic regression results:
accuracy_score: 0.608333333333
precision_score :1.0
recall_score: 0.013986013986
kappa_score: 0.0168125823197




XGboost results:
accuracy_score: 0.830555555556
precision_score :0.810606060606
recall_score: 0.748251748252
kappa_score: 0.641457680251


===========================step 5============================


Multi-layer Perceptron results:
accuracy_score: 0.791666666667
precision_score :0.742857142857
recall_score: 0.727272727273
kappa_score: 0.563389391979




K Nearest neighbor results:
accuracy_score: 0.744444444444
precision_score :0.700787401575
recall_score: 0.622377622378
kappa_score: 0.455961102533




Logistic regression results:
accuracy_score: 0.597222222222
precision_score :0.0
recall_score: 0.0
kappa_score: -0.0110792593166




XGboost results:
accuracy_score: 0.838888888889
precision_score :0.863247863248
recall_score: 0.706293706294
kappa_score: 0.652798563304


===========================step 6============================


Multi-layer Perceptron results:
accuracy_score: 0.794444444444
precision_score :0.763358778626
recall_score: 0.699300699301
kappa_score: 0.564520874881




K Nearest neighbor results:
accuracy_score: 0.75
precision_score :0.699248120301
recall_score: 0.65034965035
kappa_score: 0.471641498973




Logistic regression results:
accuracy_score: 0.602777777778
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.794444444444
precision_score :0.785123966942
recall_score: 0.664335664336
kappa_score: 0.559188536254


===========================step 7============================


Multi-layer Perceptron results:
accuracy_score: 0.780555555556
precision_score :0.738805970149
recall_score: 0.692307692308
kappa_score: 0.536777640237




K Nearest neighbor results:
accuracy_score: 0.730555555556
precision_score :0.685483870968
recall_score: 0.594405594406
kappa_score: 0.42429438143




Logistic regression results:
accuracy_score: 0.602777777778
precision_score :0.0
recall_score: 0.0
kappa_score: 0.0




XGboost results:
accuracy_score: 0.811111111111
precision_score :0.809917355372
recall_score: 0.685314685315
kappa_score: 0.594930006288


===========================step 8============================


Multi-layer Perceptron results:
accuracy_score: 0.807799442897
precision_score :0.738562091503
recall_score: 0.795774647887
kappa_score: 0.60336573103




K Nearest neighbor results:
accuracy_score: 0.774373259053
precision_score :0.713286713287
recall_score: 0.718309859155
kappa_score: 0.528726318007




Logistic regression results:
accuracy_score: 0.598885793872
precision_score :0.0
recall_score: 0.0
kappa_score: -0.0111093725552




XGboost results:
accuracy_score: 0.827298050139
precision_score :0.807692307692
recall_score: 0.739436619718
kappa_score: 0.63348043736


===========================step 9============================


Multi-layer Perceptron results:
accuracy_score: 0.777158774373
precision_score :0.75
recall_score: 0.654929577465
kappa_score: 0.523540927038




K Nearest neighbor results:
accuracy_score: 0.763231197772
precision_score :0.766355140187
recall_score: 0.577464788732
kappa_score: 0.48282290731




Logistic regression results:
accuracy_score: 0.607242339833
precision_score :1.0
recall_score: 0.00704225352113
kappa_score: 0.00850096958063




XGboost results:
accuracy_score: 0.788300835655
precision_score :0.817307692308
recall_score: 0.598591549296
kappa_score: 0.535812719045


===========================step 10============================


Multi-layer Perceptron results:
accuracy_score: 0.788300835655
precision_score :0.746268656716
recall_score: 0.704225352113
kappa_score: 0.552926525529




K Nearest neighbor results:
accuracy_score: 0.743732590529
precision_score :0.708333333333
recall_score: 0.598591549296
kappa_score: 0.449331421521




Logistic regression results:
accuracy_score: 0.601671309192
precision_score :0.0
recall_score: 0.0
kappa_score: -0.00556284645369




XGboost results:
accuracy_score: 0.824512534819
precision_score :0.801526717557
recall_score: 0.739436619718
kappa_score: 0.628028222292


MLP confusion matrix

[[183  34]
 [ 42 100]]


                accuracy    precision     recall      kappa
------------  ----------  -----------  ---------  ---------
mean           0.792496     0.752195   0.711297   0.562092
standard dev   0.0107585    0.0112713  0.0418793  0.0263204
last val       0.788301     0.746269   0.704225   0.552927
min val        0.777159     0.738562   0.65035    0.523541
max val        0.807799     0.776923   0.795775   0.603366




KNN confusion matrix

[[182  35]
 [ 57  85]]


                accuracy    precision     recall      kappa
------------  ----------  -----------  ---------  ---------
mean           0.756116     0.723182   0.6258     0.47827
standard dev   0.0187536    0.0313376  0.0457289  0.0414411
last val       0.743733     0.708333   0.598592   0.449331
min val        0.730556     0.685484   0.552448   0.424294
max val        0.791667     0.774194   0.71831    0.554867




Logistic Regression confusion matrix

[[216   1]
 [142   0]]


                accuracy    precision      recall        kappa
------------  ----------  -----------  ----------  -----------
mean          0.601392       0.253333  0.00350143  -0.00297251
standard dev  0.00391566     0.388501  0.00469474   0.00926294
last val      0.601671       0         0           -0.00556285
min val       0.595568       0         0           -0.0136159
max val       0.608333       1         0.013986     0.0168126




XGBoost

[[191  26]
 [ 37 105]]


                accuracy    precision     recall      kappa
------------  ----------  -----------  ---------  ---------
mean           0.816386     0.811315   0.700054   0.606816
standard dev   0.0169432    0.0216647  0.0448408  0.0390155
last val       0.824513     0.801527   0.739437   0.628028
min val        0.788301     0.779528   0.598592   0.535813
max val        0.838889     0.863248   0.748252   0.652958


XGBoost Feature importances: 
Feature Importance (gain):

   Score  Parameter
--------  --------------------
17.8694   k2_threads_per_block
16.3987   k1_registers
15.6783   k1_threads_per_block
15.605    k2_registers
12.4413   k2_blocks_per_grid
11.955    k1_blocks_per_grid
10.7087   k1_shared_mem_B
 9.16403  k2_shared_mem_B


Feature Importance (weight):

  Score  Parameter
-------  --------------------
    122  k1_blocks_per_grid
    118  k2_blocks_per_grid
    100  k2_registers
     95  k1_registers
     84  k1_threads_per_block
     73  k2_threads_per_block
     30  k2_shared_mem_B
     27  k1_shared_mem_B


Feature Importance (cover):

  Score  Parameter
-------  --------------------
409.287  k1_registers
399.919  k1_shared_mem_B
398.501  k2_registers
381.078  k2_threads_per_block
378.258  k1_threads_per_block
213.638  k2_shared_mem_B
204.035  k2_blocks_per_grid
165.011  k1_blocks_per_grid


